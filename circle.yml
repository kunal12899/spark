machine:
  java:
    version: oraclejdk8
  post:
    - sudo apt-get --assume-yes install r-base r-base-dev
    - pyenv install miniconda3-latest --skip-existing
    - ln -s $(pyenv root)/versions/miniconda3-latest ~/miniconda
    - 'pyenv versions | grep -q miniconda3-latest/envs/python2 || $CONDA_BIN create -y -n python2 python==2.7.11 numpy'
    - 'pyenv versions | grep -q miniconda3-latest/envs/python3 || $CONDA_BIN create -y -n python3 python==3.4.4 numpy'
    - pyenv global miniconda3-latest/envs/python2 miniconda3-latest/envs/python3 #pypy-4.0.1
    - pyenv rehash
  environment:
    TERM: dumb
    R_HOME: /usr/lib/R
    CONDA_BIN: $HOME/miniconda/bin/conda

checkout:
  post:
    - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
    - echo "user=$BINTRAY_USERNAME" > .credentials
    - echo "password=$BINTRAY_PASSWORD" >> .credentials
    - echo "realm=Bintray API Realm" >> .credentials
    - echo "host=api.bintray.com" >> .credentials

dependencies:
  override:
    - |
      if [[ -d build_classes ]]; then
        # Copy contents into current build directory
        rsync --info=stats2,misc1,flist0 -a build_classes/ .
      fi
    - ./build/mvn -DskipTests -Phadoop-palantir -Pkinesis-asl -Pkubernetes -Pmesos -Pyarn -Phive-thriftserver -Phive -Psparkr install
      # Copy all of */target/scala_2.11/classes to build_classes/
    - >
      rsync --info=stats2,misc1,flist0 -a --delete-excluded --prune-empty-dirs --exclude build_classes/ --exclude 'target/streams'
      --include 'target/***' --include '**/' --exclude '*' . build_classes/
    - |
      # Make sbt fetch all the external deps to ~/.ivy2 so it gets cached
      ./build/sbt -Phadoop-palantir -Pkinesis-asl -Pkubernetes -Pmesos -Pyarn -Phive-thriftserver -Phive -Psparkr externalDependencyClasspath
  cache_directories:
    - "build_classes"

general:
  artifacts:
    - "python/unit-tests.log"
    - "R/unit-tests.out"

test:
  override:
    - set -o pipefail && HADOOP_PROFILE=hadooppalantir ./dev/run-tests | tee -a "$CIRCLE_ARTIFACTS/run-tests.log" | grep -v -i info:
        parallel: true
        timeout: 1800
        max-runtime: 14400
    - ? |
          set -euo pipefail
          version=$(git describe --tags)

          publish_artifacts() {
            tmp_settings="tmp-settings.xml"
            echo "<settings><servers><server>" > $tmp_settings
            echo "<id>bintray-palantir-release</id><username>$BINTRAY_USERNAME</username>" >> $tmp_settings
            echo "<password>$BINTRAY_PASSWORD</password>" >> $tmp_settings
            echo "</server></servers></settings>" >> $tmp_settings

            ./build/mvn versions:set -DnewVersion=$version
            ./build/mvn --settings $tmp_settings -DskipTests -Phadoop-palantir -Pkinesis-asl -Pkubernetes -Pmesos -Pyarn -Phive-thriftserver -Phive -Psparkr deploy
          }

          make_dist() {
            dist_name="$1"
            build_flags="$2"
            shift 2
            dist_version="${version}-${dist_name}"
            file_name="spark-dist-${dist_version}.tgz"
            ./dev/make-distribution.sh --name $dist_name --tgz "$@" $build_flags
            curl -u $BINTRAY_USERNAME:$BINTRAY_PASSWORD -T $file_name "https://api.bintray.com/content/palantir/releases/spark/${version}/org/apache/spark/spark-dist/${dist_version}/${file_name}"
          }

          case $CIRCLE_NODE_INDEX in
          0)
            publish_artifacts
            make_dist hadoop-2.8.0-palantir2 "-Phadoop-palantir -Pkinesis-asl -Pkubernetes -Pmesos -Pyarn -Phive-thriftserver -Phive -Psparkr"
            make_dist without-hadoop "-Phadoop-provided -Pkubernetes -Pmesos -Pyarn -Psparkr" --clean
            ;;
          esac
      :
        parallel: false
        timeout: 1200

deployment:
  release:
    tag: /[0-9]+(?:\.[0-9]+)+-palantir[0-9]+(?:-kubernetes[0-9]+)?/
    commands:
      - curl -u $BINTRAY_USERNAME:$BINTRAY_PASSWORD -X POST https://api.bintray.com/content/palantir/releases/spark/$(git describe --tags)/publish
  snapshot:
    branch: master
    commands:
      - curl -u $BINTRAY_USERNAME:$BINTRAY_PASSWORD -X POST https://api.bintray.com/content/palantir/releases/spark/$(git describe --tags)/publish
